{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anton\\\\Documents\\\\react-project\\\\new-react-frontend\\\\frontend\\\\src\\\\components\\\\pages\\\\NewEventPage.jsx\";\nimport { Link, useParams, NavLink, json } from 'react-router-dom';\nimport EventForm from '../EventForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NewEventPage() {\n  function submitHandler(event) {\n    event.preventDefault();\n  }\n  return /*#__PURE__*/_jsxDEV(EventForm, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n}\n_c = NewEventPage;\nexport default NewEventPage;\nexport async function action({\n  request,\n  params\n}) {\n  const data = await request.formData();\n  const eventData = {\n    title: data.get('title'),\n    image: data.get('image')\n  };\n  const response = await fetch('http://localhost:8080/events', {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(eventData)\n  });\n  if (!response.ok) {\n    alert(\"faggot\");\n    throw json({\n      message: \"Could not save event\"\n    }, {\n      status: 500\n    });\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"NewEventPage\");","map":{"version":3,"names":["Link","useParams","NavLink","json","EventForm","jsxDEV","_jsxDEV","NewEventPage","submitHandler","event","preventDefault","fileName","_jsxFileName","lineNumber","columnNumber","_c","action","request","params","data","formData","eventData","title","get","image","response","fetch","method","headers","body","JSON","stringify","ok","alert","message","status","$RefreshReg$"],"sources":["C:/Users/anton/Documents/react-project/new-react-frontend/frontend/src/components/pages/NewEventPage.jsx"],"sourcesContent":["import { Link, useParams, NavLink, json } from 'react-router-dom';\r\nimport EventForm from '../EventForm';\r\nfunction NewEventPage() {\r\n    function submitHandler(event) {\r\n        event.preventDefault();\r\n    }\r\n    return (\r\n        <EventForm />\r\n    )\r\n}\r\nexport default NewEventPage\r\n\r\n\r\nexport async function action({ request, params }) {\r\n    const data = await request.formData();\r\n\r\n    const eventData = {\r\n        title: data.get('title'),\r\n        image: data.get('image')\r\n    }\r\n    const response = await fetch('http://localhost:8080/events', {\r\n        method: \"POST\",\r\n        headers:{\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(eventData)\r\n        });\r\n\r\n        if(!response.ok){\r\n            alert(\"faggot\")\r\n            throw json({message: \"Could not save event\"}, {status: 500})\r\n        }\r\n       \r\n\r\n}"],"mappings":";AAAA,SAASA,IAAI,EAAEC,SAAS,EAAEC,OAAO,EAAEC,IAAI,QAAQ,kBAAkB;AACjE,OAAOC,SAAS,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACrC,SAASC,YAAYA,CAAA,EAAG;EACpB,SAASC,aAAaA,CAACC,KAAK,EAAE;IAC1BA,KAAK,CAACC,cAAc,CAAC,CAAC;EAC1B;EACA,oBACIJ,OAAA,CAACF,SAAS;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAErB;AAACC,EAAA,GAPQR,YAAY;AAQrB,eAAeA,YAAY;AAG3B,OAAO,eAAeS,MAAMA,CAAC;EAAEC,OAAO;EAAEC;AAAO,CAAC,EAAE;EAC9C,MAAMC,IAAI,GAAG,MAAMF,OAAO,CAACG,QAAQ,CAAC,CAAC;EAErC,MAAMC,SAAS,GAAG;IACdC,KAAK,EAAEH,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IACxBC,KAAK,EAAEL,IAAI,CAACI,GAAG,CAAC,OAAO;EAC3B,CAAC;EACD,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,EAAE;IACzDC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAC;MACJ,cAAc,EAAE;IACpB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACV,SAAS;EAC9B,CAAC,CAAC;EAEF,IAAG,CAACI,QAAQ,CAACO,EAAE,EAAC;IACZC,KAAK,CAAC,QAAQ,CAAC;IACf,MAAM9B,IAAI,CAAC;MAAC+B,OAAO,EAAE;IAAsB,CAAC,EAAE;MAACC,MAAM,EAAE;IAAG,CAAC,CAAC;EAChE;AAGR;AAAC,IAAApB,EAAA;AAAAqB,YAAA,CAAArB,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}