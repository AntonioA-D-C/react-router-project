{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anton\\\\Documents\\\\react-project\\\\new-react-frontend\\\\frontend\\\\src\\\\components\\\\pages\\\\EventPages.jsx\",\n  _s = $RefreshSig$();\nimport { useLoaderData } from 'react-router-dom';\nimport EventsList from '../EventsList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction EventPages() {\n  _s();\n  const data = useLoaderData();\n  if (data.isError) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: data.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 12\n    }, this);\n  }\n  const events = data.events;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(EventsList, {\n      events: events\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_s(EventPages, \"5thj+e1edPyRpKif1JmVRC6KArE=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventPages;\nexport default EventPages;\nexport async function loader() {\n  const response = await fetch('http://localhost:8080/events');\n  if (!response.ok) {\n    //  return {isError:true, message: \"Could not fetch events\"}\n    throw new Response(JSON.stringify({\n      message: \"Could not fetch events.\"\n    }), {});\n  } else {\n    return response;\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"EventPages\");","map":{"version":3,"names":["useLoaderData","EventsList","jsxDEV","_jsxDEV","Fragment","_Fragment","EventPages","_s","data","isError","children","message","fileName","_jsxFileName","lineNumber","columnNumber","events","_c","loader","response","fetch","ok","Response","JSON","stringify","$RefreshReg$"],"sources":["C:/Users/anton/Documents/react-project/new-react-frontend/frontend/src/components/pages/EventPages.jsx"],"sourcesContent":["import {useLoaderData} from 'react-router-dom'\r\nimport EventsList from '../EventsList';\r\n\r\nfunction EventPages() {\r\n  \r\n const data = useLoaderData();\r\n\r\n if(data.isError){\r\n    return <p>{data.message}</p>\r\n }\r\n const events = data.events;\r\n  return (\r\n    <>\r\n     \r\n      { <EventsList events ={events} />}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default EventPages;\r\n\r\nexport async function loader(){\r\n\r\n\r\n        const response = await fetch('http://localhost:8080/events');\r\n\r\n        if (!response.ok) {\r\n       //  return {isError:true, message: \"Could not fetch events\"}\r\n       throw new Response(JSON.stringify({message: \"Could not fetch events.\"}), {})\r\n        } else {\r\n          return response\r\n\r\n        }\r\n\r\n\r\n}"],"mappings":";;AAAA,SAAQA,aAAa,QAAO,kBAAkB;AAC9C,OAAOC,UAAU,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEvC,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EAErB,MAAMC,IAAI,GAAGR,aAAa,CAAC,CAAC;EAE5B,IAAGQ,IAAI,CAACC,OAAO,EAAC;IACb,oBAAON,OAAA;MAAAO,QAAA,EAAIF,IAAI,CAACG;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAC/B;EACA,MAAMC,MAAM,GAAGR,IAAI,CAACQ,MAAM;EACzB,oBACEb,OAAA,CAAAE,SAAA;IAAAK,QAAA,eAEIP,OAAA,CAACF,UAAU;MAACe,MAAM,EAAGA;IAAO;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC,gBACjC,CAAC;AAEP;AAACR,EAAA,CAdQD,UAAU;EAAA,QAELN,aAAa;AAAA;AAAAiB,EAAA,GAFlBX,UAAU;AAgBnB,eAAeA,UAAU;AAEzB,OAAO,eAAeY,MAAMA,CAAA,EAAE;EAGtB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAE5D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IACnB;IACA,MAAM,IAAIC,QAAQ,CAACC,IAAI,CAACC,SAAS,CAAC;MAACb,OAAO,EAAE;IAAyB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EAC3E,CAAC,MAAM;IACL,OAAOQ,QAAQ;EAEjB;AAGR;AAAC,IAAAF,EAAA;AAAAQ,YAAA,CAAAR,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}