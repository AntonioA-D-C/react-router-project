{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anton\\\\Documents\\\\react-project\\\\new-react-frontend\\\\frontend\\\\src\\\\components\\\\pages\\\\EventPages.jsx\",\n  _s = $RefreshSig$();\nimport { useLoaderData, json, defer, Await } from 'react-router-dom';\nimport EventsList from '../EventsList';\nimport { Suspense } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventPages() {\n  _s();\n  const {\n    events\n  } = useLoaderData();\n  console.log(events);\n  return;\n  /*#__PURE__*/_jsxDEV(Suspense, {\n    fallback: /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 25\n    }, this),\n    children: /*#__PURE__*/_jsxDEV(Await, {\n      resolve: events,\n      children: loadedEvents => /*#__PURE__*/_jsxDEV(EventsList, {\n        events: loadedEvents\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 26\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n_s(EventPages, \"22Av1LduzrZxSsk8kXUUCix36lQ=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventPages;\nexport default EventPages;\nasync function loadEvents() {\n  const response = await fetch('http://localhost:8080/events');\n  console.log(\"HELLO?\");\n  if (!response.ok) {\n    /*\r\n    throw new Response(JSON.stringify({ message: \"Could not fetch events.\" }), {\r\n        status: 500,\r\n    })*/\n    console.log(\"The response\");\n    console.log(response);\n    throw json({\n      message: \"Could not fetch events.\"\n    }, {\n      status: 500\n    });\n  } else {\n    const resData = await response.json();\n    return resData.events;\n  }\n}\nexport function loader() {\n  defer({\n    events: loadEvents()\n  });\n}\nvar _c;\n$RefreshReg$(_c, \"EventPages\");","map":{"version":3,"names":["useLoaderData","json","defer","Await","EventsList","Suspense","jsxDEV","_jsxDEV","EventPages","_s","events","console","log","fallback","style","textAlign","children","fileName","_jsxFileName","lineNumber","columnNumber","resolve","loadedEvents","_c","loadEvents","response","fetch","ok","message","status","resData","loader","$RefreshReg$"],"sources":["C:/Users/anton/Documents/react-project/new-react-frontend/frontend/src/components/pages/EventPages.jsx"],"sourcesContent":["import { useLoaderData, json, defer, Await } from 'react-router-dom'\r\nimport EventsList from '../EventsList';\r\nimport { Suspense } from 'react';\r\n\r\nfunction EventPages() {\r\n\r\n    const {events} = useLoaderData();\r\n    console.log(events);\r\n    return\r\n  \r\n    <Suspense fallback={<p style={{textAlign: \"center\"}}>Loading...</p>}>\r\n    <Await resolve={events}>\r\n        {(loadedEvents)=><EventsList events={loadedEvents}/> }\r\n    </Await>\r\n    </Suspense>\r\n}\r\n\r\nexport default EventPages;\r\n\r\nasync function loadEvents(){\r\n   \r\n    const response = await fetch('http://localhost:8080/events');\r\nconsole.log(\"HELLO?\")\r\n    if (!response.ok) {\r\n        /*\r\n        throw new Response(JSON.stringify({ message: \"Could not fetch events.\" }), {\r\n            status: 500,\r\n        })*/\r\n        console.log(\"The response\")\r\n        console.log(response)\r\n        throw json({ message: \"Could not fetch events.\" }, {\r\n            status: 500\r\n        })\r\n    } else {\r\n        const resData = await response.json();\r\n       \r\n        return resData.events\r\n    }\r\n    \r\n \r\n}\r\nexport function loader() {\r\n    defer({\r\n        events: loadEvents()\r\n    })\r\n\r\n}"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,IAAI,EAAEC,KAAK,EAAEC,KAAK,QAAQ,kBAAkB;AACpE,OAAOC,UAAU,MAAM,eAAe;AACtC,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EAElB,MAAM;IAACC;EAAM,CAAC,GAAGV,aAAa,CAAC,CAAC;EAChCW,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;EACnB;EAEA,aAAAH,OAAA,CAACF,QAAQ;IAACQ,QAAQ,eAAEN,OAAA;MAAGO,KAAK,EAAE;QAACC,SAAS,EAAE;MAAQ,CAAE;MAAAC,QAAA,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAE;IAAAJ,QAAA,eACpET,OAAA,CAACJ,KAAK;MAACkB,OAAO,EAAEX,MAAO;MAAAM,QAAA,EACjBM,YAAY,iBAAGf,OAAA,CAACH,UAAU;QAACM,MAAM,EAAEY;MAAa;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AACf;AAACX,EAAA,CAXQD,UAAU;EAAA,QAEER,aAAa;AAAA;AAAAuB,EAAA,GAFzBf,UAAU;AAanB,eAAeA,UAAU;AAEzB,eAAegB,UAAUA,CAAA,EAAE;EAEvB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAChEf,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;EACjB,IAAI,CAACa,QAAQ,CAACE,EAAE,EAAE;IACd;AACR;AACA;AACA;IACQhB,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;IAC3BD,OAAO,CAACC,GAAG,CAACa,QAAQ,CAAC;IACrB,MAAMxB,IAAI,CAAC;MAAE2B,OAAO,EAAE;IAA0B,CAAC,EAAE;MAC/CC,MAAM,EAAE;IACZ,CAAC,CAAC;EACN,CAAC,MAAM;IACH,MAAMC,OAAO,GAAG,MAAML,QAAQ,CAACxB,IAAI,CAAC,CAAC;IAErC,OAAO6B,OAAO,CAACpB,MAAM;EACzB;AAGJ;AACA,OAAO,SAASqB,MAAMA,CAAA,EAAG;EACrB7B,KAAK,CAAC;IACFQ,MAAM,EAAEc,UAAU,CAAC;EACvB,CAAC,CAAC;AAEN;AAAC,IAAAD,EAAA;AAAAS,YAAA,CAAAT,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}